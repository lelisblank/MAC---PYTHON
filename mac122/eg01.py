# -*- coding: utf-8 -*-
"""EG01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lIWuQtSc7W9Hn5FuskO_UaoQ5qj_cEy0
"""

def main():
  '''
  '''
  dif = 0

  for i in range(11):

    if Hmaior(i) != Hmenor(i):
      dif +=1
      print(f'Hmaior({i}) = {Hmaior(i):<18}\tHmenor({i}) = {Hmenor(i)} ***')

    else: 
      print(f'Hmaior({i}) = {Hmaior(i):<18}\tHmenor({i}) = {Hmenor(i)}')
 
  repetir = input('Deseja fazer mais testes?(s/n) ')
  
  while repetir != 'n':

      ini = int(input('Digite o n inicial: '))
      
      fim = int(input('Digite o n final: '))
      
      passo = int(input('Digite o passo: '))
      
      dif = 0
      for i in range(ini, fim+1, passo):
          
          if Hmaior(i) != Hmenor(i):
              dif += 1
              print(f'Hmaior({i}) = {Hmaior(i):<18}\tHmenor({i}) = {Hmenor(i)} ***')
          
          else: 
              print(f'Hmaior({i}) = {Hmaior(i):<18}\tHmenor({i}) = {Hmenor(i)}')
              
      print(f'\n{dif} resultados divergentes')  
      
      repetir = input('Deseja fazer mais testes?(s/n) ')

def Hmaior(n):
    ''' 
    int -> float
    recebe um inteiro positivo n e retorna o número harmônico de ordem n somando elementos do maior ao menor
    '''
    soma = 0
    for i in range(1, n + 1):
        soma += 1/i
    
    return soma

def Hmenor(n):
    ''' 
    int -> float
    recebe um inteiro positivo n e retorna o número harmônico de ordem n somando elementos do menor ao maior
    '''
    soma = 0
    for i in range(n, 0, -1):
        soma += 1/i
    
    return soma

main()